const createCsvWriter = require("csv-writer").createObjectCsvWriter;

const scraperObject = {
  url: "https://bn.quora.com/%E0%A6%A1%E0%A6%BF%E0%A6%AA%E0%A7%8D%E0%A6%B0%E0%A7%87%E0%A6%B6%E0%A6%A8-%E0%A6%AC%E0%A6%BF%E0%A6%B7%E0%A6%A8%E0%A7%8D%E0%A6%A8%E0%A6%A4%E0%A6%BE-%E0%A6%95%E0%A6%BF",
  async scraper(browser) {
    let page = await browser.newPage();
    console.log(`Navigating to ${this.url}...`);
    // Navigate to the selected page
    await page.goto(this.url);
    // Wait for the required DOM to be rendered
    await page.waitForSelector("#root");

    let data = [];

    // Function to scroll to the bottom of the page
    const scrollToBottom = async () => {
      await page.evaluate(async () => {
        await new Promise((resolve) => {
          let totalHeight = 0;
          let distance = 2000;
          let scrollHeight = document.body.scrollHeight;

          const timer = setInterval(() => {
            window.scrollBy(0, distance);
            totalHeight += distance;

            if (totalHeight >= scrollHeight) {
              clearInterval(timer);
              resolve();
            }
          }, 100);
        });
      });
    };

    const clickReadMoreButton = async () => {
      const readMoreButtons = await page.$$(".puppeteer_test_read_more_button");
      for (const button of readMoreButtons) {
        await button.click();
        await page.waitForTimeout(2000); // Add a delay to load more content
      }
    };

    // Click the "Read More" button and scrape data multiple times
    for (let i = 0; i < 10; i++) {
      // You can adjust the number of times to click the button
      await clickReadMoreButton();
      await scrollToBottom();
    }

    // Function to scrape data from divs
    const scrapeDivs = async () => {
      const divs = await page.$$(
        `.puppeteer_test_question_main > div > div:first-child > div:nth-child(3) > div`
      );

      for (const div of divs) {
        const title = await div.$(
          ".TitleText___StyledCssInlineComponent-sc-1hpb63h-0 span > span > span > span"
        );
        let contents = await div.$(
          ".puppeteer_test_answer_content > div >div:last-child>div > span > span"
        );

        if (!contents) {
          // If the first selector doesn't exist, try the second selector
          contents = await div.$(
            ".puppeteer_test_answer_content > div  > span > span"
          );
        }

        if (title && contents) {
          const titleText = await title.evaluate(
            (element) => element.textContent
          );
          const contentText = await contents.evaluate(
            (element) => element.textContent
          );
          const dataObj = { blogTitles: titleText, blogContents: contentText };
          data.push(dataObj);
        }
      }
    };

    // Scrape data from all available divs
    await scrapeDivs();

    // Write all the combined titles to the CSV
    const csvWriter = createCsvWriter({
      path: "scraped_data.csv",
      header: [
        { id: "blogTitles", title: "Blog Titles" },
        { id: "blogContents", title: "Blog Contents" },
      ],
    });

    await csvWriter.writeRecords(data);

    console.log("Scraping and CSV writing completed.");
  },
};

module.exports = scraperObject;
